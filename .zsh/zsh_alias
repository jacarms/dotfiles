# Dotfile Management
alias config='git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'

alias ls="ls --color"
alias ll="ls -lh --color"
alias ..="cd .."

alias grep='grep -n --color'
alias bell="say ring"
alias beep="say beep"

function mkcdir() {
    command mkdir -p "$@" && command cd -P "$@";
}

alias sh="zsh"

# Git aliases
alias gs="git status"
alias ga="git add -u"
alias gc="git commit -m"
alias gf="git fetch"
alias gp="git push"
alias gpn="git rev-parse --abbrev-ref HEAD | xargs git push --set-upstream origin "
alias gpf="git push -f"
alias gnew="git checkout -b"
alias glog="git log origin/green"
alias mlog="git log origin/green"
alias pull="git pull"
alias gd="git diff"
alias gds="git diff --staging"
alias grevert="git reset --hard"
# Fuzzy checkout (most recent branch first)
alias gcf="git for-each-ref --sort=-committerdate --format='%(refname:short)' refs/heads | fzf | xargs git checkout"
# Fuzzy delete
alias gdelf="git for-each-ref --sort=-committerdate --format='%(refname:short)' refs/heads | fzf | xargs git branch -d"
# Fuzzy branch search (recent first)
alias gbf="git for-each-ref --sort=-committerdate --format='%(refname:short)' refs/heads | fzf -m"
alias squashf="git for-each-ref --format='%(refname:short)' refs/heads | fzf | xargs git rebase -i --autosquash"
alias gdelete="git for-each-ref --format='%(refname:short)' refs/heads | fzf | xargs git branch -d"
alias gdeletef="git for-each-ref --format='%(refname:short)' refs/heads | fzf | xargs git branch -D"
alias rebase="git rebase green"
alias green="git fetch origin green:green && git checkout green"
alias master="git fetch origin master:master && git checkout master"
alias gmerge="git fetch origin green:green && git merge origin/green"
alias grbgreen="git fetch origin green && git rebase origin/green"
alias mmerge="git fetch; git merge origin/master"
alias grbprev="git rebase @{-1}"
alias gprev="git checkout -"
alias gst="git stash"
alias glast="git diff HEAD~1 HEAD"
alias gsyncb="git pr-train -rpf"
alias gabort="git rebase --abort"
alias gfix="git commit -a --fixup HEAD"
alias gcont="git rebase --continue"
alias gacont="git add --all && git rebase --continue"
alias gpick="git cherry-pick"

alias rocket="gh pr comment -b \"@canva-ci-bot test\""
alias rocketm="gh pr comment -b \"@canva-ci-bot merge\""
alias rocketfix="gh pr comment -b \":rocket:[canva-autofix]\""

alias prc="gh pr create --web"
alias prv="gh pr view --web"

alias localstack="backends/bin/start.sh --localstack"
alias build_backends='~/work/canva/tools/sde/build.sh backends'
alias run_backends='sde run backends/bin/start.sh'
alias bls='./tools/sde/build.sh localstack'
alias rls='./backends/bin/start.sh --localstack'
alias ils='./production/local/bin/init_local_stack.sh'
alias btest='./tools/sde/build.sh backends --include campaign_worker && ./backends/bin/start.sh --include campaign_worker'
alias vim="nvim"
alias vi="nvim"

alias sprop="spring-prop-analyser"

export PROJECT_DIR="/Users/jacarm/work"

build-and-run () {
	pushd ~/work/canva > /dev/null
	./tools/sde/build.sh backends --include "$@" && ./backends/bin/start.sh --include "$@"
	popd > /dev/null
}
set foldlevel=10

alias tf="/Users/jacarm/work/infrastructure/bin/tf.sh"

